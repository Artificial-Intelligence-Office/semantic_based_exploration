<?xml version="1.0"?>
<launch>
    <!-- MAVROS posix SITL environment launch script -->
    <arg name="headless" default="false"/>
    <arg name="gui" default="true"/>
    <arg name="debug" default="false"/>
    <arg name="paused" default="false"/> 
    <arg name="pluginlists_yaml" default="$(find mavros)/launch/px4_pluginlists.yaml" />
    <arg name="config_yaml" default="$(find mavros)/launch/px4_config.yaml" />
    <arg name="screen" default="screen"/>
    <arg name="ns" default="uav_1"/>
    <arg name="log_file" default="$(arg ns)"/>
    <arg name="gazebo_arg" default=""/>
    <arg name="world_name" default="$(find kuri_usar_sim)/gazebo_models/world/sar_twoRooms.world"/>
    <arg name="verbose" default="false"/>

    <arg name="mav_name" default="uav_1" />
    <arg name="vehicle" default="iris"/>
    <arg name="enable_logging" default="false" />
    <arg name="enable_ground_truth" default="true" />


  <include file="$(find kuri_usar_sim)/launch/basic.launch" >
    <arg name="world_name" default="$(arg world_name)"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" default="$(arg paused)"/>
    <arg name="debug" default="$(arg debug)"/>
    <arg name="headless" default="$(arg headless)"/>
  </include>
 

  <!--param name="robot_description" command="$(find xacro)/xacro.py '$(find kuri_usar_sim)/urdf/iris/$(arg vehicle)_with_sensors_de.urdf'"/-->
<!--
  <node pkg="tf" type="static_transform_publisher" name="tf_001" args="0 0 0 0 0 0  fcu odometry_sensor 100" />
  <node pkg="tf" type="static_transform_publisher" name="tf_006" args="0 0 0 0 0 0  base_link fcu  100" />
  <node pkg="tf" type="static_transform_publisher" name="tf_010" args="0 0 0 0 0 0  world base_link  100" />
  <node pkg="tf" type="static_transform_publisher" name="tf_002" args="0.1 0 -0.03 0 0.1 0 odometry_sensor front_cam_depth_optical_frame 100" />
  <node pkg="tf" type="static_transform_publisher" name="tf_53" args="0 0 0 0 0 0 world navigation 100" />


  <node pkg="tf" type="static_transform_publisher" name="tf_53" args="0 0 0 0 0 0 world navigation 100" />
  <node pkg="tf" type="static_transform_publisher" name="tf_006" args="0 0 0 0 0 0  odometry_sensor base_link 100" />
  <node pkg="tf" type="static_transform_publisher" name="tf_007" args="0 0 0 0 0 0  base_link fcu  100" />
  <node pkg="tf" type="static_transform_publisher" name="tf_002" args="0.1 0 -0.03 0 0.0 0 fcu front_cam_depth_frame 100" />

-->

   <!-- UAV 1 - IRIS 1 -->
    <!--group ns="uav_1"-->
    <arg name="name" default="uav_1"/>
    <arg name="fcu_url" default="udp://:14556@localhost:14557"/>
    <arg name="rcS" default="$(find px4)/posix-configs/SITL/init/lpe/$(arg vehicle)"/>
    <arg name="urdfRobot" default="$(find kuri_usar_sim)/urdf/iris/$(arg vehicle)_with_sensors.sdf"/>
    <arg name="x" value="2"/>
    <arg name="y" value="0"/>
    <arg name="z" default="0.2"/>
    <arg name="R" default="0"/>
    <arg name="P" default="0"/>
    <arg name="Y" value="3.14"/>

   <!-- Drone Model -->
    <node name="$(anon vehicle_spawn)" output="$(arg screen)" pkg="gazebo_ros" type="spawn_model"
        args="-sdf -file $(arg urdfRobot) -model $(arg name) -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg R) -P $(arg P) -Y $(arg Y)"/>

    <param name="robot_description" textfile="$(find kuri_usar_sim)/urdf/$(arg vehicle)/iris_with_sensors.urdf"/>
     <node pkg="robot_state_publisher" type="robot_state_publisher" name="rob_st_pub" ></node>
     <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_st_pub" ></node>
   <!-- Firmware -->
    <node name="sitl" pkg="px4" type="px4" output="$(arg screen)"
        args="$(find px4) $(arg rcS)">
    </node>

   <!-- MAVROS -->
    <include file="$(find px4)/launch/mavros.launch">
        <arg name="ns" value="$(arg ns)"/>
        <arg name="gcs_url" value=""/> 
        <arg name="fcu_url" value="$(arg fcu_url)"/>
        <arg name="pluginlists_yaml" value="$(arg pluginlists_yaml)" />
        <arg name="config_yaml" value="$(arg config_yaml)" />
    </include>    

   <!-- DroneCommander -->
   <node name="droneCommander" pkg="rrt_explorer" type="drone_commander" output="$(arg screen)">
   </node>

   <!-- rrt planner and px4 navigator
    <include file="$(find rrt_explorer)/launch/rrt_env_usar.launch">
        <arg name="mav_name" value="$(arg mav_name)" />
        <arg name="param_file" value="$(find rrt_explorer)/resource/exploration.yaml" />
        <arg name="enable_logging" value="$(arg enable_logging)" />
        <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
        <arg name="log_file" value="$(arg log_file)" />
        <arg name="tf_frame" value="navigation" />
        <arg name="pcl_topic" value="/front_cam/depth/points" />
        <arg name="resolution" value="0.4" />
        <arg name="visualize_max_z" value="2.5" />
        <arg name="sensor_max_range" value="9.0" />
  </include> -->
</launch>
